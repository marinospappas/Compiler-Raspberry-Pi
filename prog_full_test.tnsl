// this program tests as many compiler features as possible

program full_test

fun num_expression(a1: int, a2: int, a3: int, a4: int): void {
    var result1: int, result2: int
    println "integer input: ", a1, ", ", a2, ", ", a3, ", ", a4
    result1 = (a1 + a2) / a3 - 14 - (-1) * ((a4 / (-a3)) + (1 - a2 * (6 + a1)))
    println "result1 = (a1 + a2) / a3 - 14 - (-1) * ((a4 / (-a3)) + (1 - a2 * (6 + a1)))"
    println result1
    result2 = -((((a1 + 1) * a2 + 5) * a3 - 120) * (-(a4 + 5)) - 99 )
    println "result2 = -((((a1 + 1) * a2 + 5) * a3 - 120) * (-(a4 + 5)) - 99 )"
    println result2
    return
}

fun bool_expression(a1: int, a2: int, a3: int): void {
    var result1: int, result2: int
    println "integer input: ", a1, ", ", a2, ", ", a3
    result1 = a1 >= a2 || a3
    println "result1 = a1 >= a2 || a3"
    if (result1) { println "true" } else { println "false" }
    result2 = a1
    println "a3 is zero"
    if (a3 == 0) { println "true" } else { println "false" }
    println "a3 is not zero"
    if (!a3) { println "true" } else { println "false" }
    return
}

main {
    var x1: int, x2: int, x3: int, x4: int
    println "1. numeric expressions"
    println "enter 4 integers (hit <enter> after each one): "
    read x1, x2, x3, x4
    num_expression(x1, x2, x3, x4)

    println "2. boolean expressions"
    println "enter 3 small integers (hit <enter> after each one): "
    read x1, x2, x3
    bool_expression(x1, x2, x3)

}

endprogram